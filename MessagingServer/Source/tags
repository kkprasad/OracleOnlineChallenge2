!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
Accept	CBasicSocket.cpp	/^int CBasicSocket::Accept()$/;"	f	class:CBasicSocket
Accept	CServerSocket.cpp	/^int CServerSocket::Accept()$/;"	f	class:CServerSocket
AsynchronousSocket	CBasicSocket.h	/^	AsynchronousSocket = 2,$/;"	e	enum:SocketType
Bind	CBasicSocket.cpp	/^bool CBasicSocket::Bind(std::string a_ssourceIP, int a_iportNumber)$/;"	f	class:CBasicSocket
Bind	CServerSocket.cpp	/^bool CServerSocket::Bind()$/;"	f	class:CServerSocket
Bind	CTCPSocket.cpp	/^bool CTCPSocket::Bind(std::string a_ssourceIP,int a_isourcePortNumber)$/;"	f	class:CTCPSocket
CBasicSocket	CBasicSocket.cpp	/^CBasicSocket::CBasicSocket()$/;"	f	class:CBasicSocket
CBasicSocket	CBasicSocket.h	/^class CBasicSocket$/;"	c
CC	Makefile	/^CC= g++ -w -g$/;"	m
CMessagingServer	CMessagingServer.cpp	/^CMessagingServer::CMessagingServer()$/;"	f	class:CMessagingServer
CMessagingServer	CMessagingServer.h	/^class CMessagingServer:public CServerSocket$/;"	c
CServerSocket	CServerSocket.cpp	/^CServerSocket::CServerSocket()$/;"	f	class:CServerSocket
CServerSocket	CServerSocket.h	/^class CServerSocket$/;"	c
CSocketFactory	CSocketFactory.h	/^class CSocketFactory$/;"	c
CSynchronousSocketFactory	CSynchronousSocketFactory.h	/^class CSynchronousSocketFactory:public CSocketFactory$/;"	c
CTCPSocket	CTCPSocket.h	/^class CTCPSocket:public CBasicSocket$/;"	c
Close	CBasicSocket.cpp	/^bool CBasicSocket::Close()$/;"	f	class:CBasicSocket
CloseConnection	CMessagingServer.h	/^	CloseConnection = 2$/;"	e	enum:MessageProcessorAction
Connect	CBasicSocket.cpp	/^bool CBasicSocket::Connect()$/;"	f	class:CBasicSocket
Connect	CTCPSocket.cpp	/^bool CTCPSocket::Connect(std::string a_sdestinationIP, int a_idestinationPortNumber)$/;"	f	class:CTCPSocket
Create	CBasicSocket.cpp	/^bool CBasicSocket::Create()$/;"	f	class:CBasicSocket
Create	CTCPSocket.cpp	/^bool CTCPSocket::Create()$/;"	f	class:CTCPSocket
DisconnectClient	CServerSocket.cpp	/^bool CServerSocket::DisconnectClient()$/;"	f	class:CServerSocket
ForceClose	CBasicSocket.cpp	/^void  CBasicSocket::ForceClose(int a_isocketFD)$/;"	f	class:CBasicSocket
ForceDisconnect	CServerSocket.cpp	/^void CServerSocket::ForceDisconnect(int a_isocketFD)$/;"	f	class:CServerSocket
ForceShutdown	CBasicSocket.cpp	/^void CBasicSocket::ForceShutdown(int a_isocketFD)$/;"	f	class:CBasicSocket
GetConnectionStatus	CBasicSocket.cpp	/^bool CBasicSocket::GetConnectionStatus()$/;"	f	class:CBasicSocket
GetMaxMessageHandlerThreads	CMessagingServer.cpp	/^int CMessagingServer::GetMaxMessageHandlerThreads()$/;"	f	class:CMessagingServer
GetMessagingServerActiveStatus	CMessagingServer.cpp	/^bool CMessagingServer::GetMessagingServerActiveStatus()$/;"	f	class:CMessagingServer
GetPortNumber	CServerSocket.cpp	/^int CServerSocket::GetPortNumber()$/;"	f	class:CServerSocket
GetProtocol	CServerSocket.cpp	/^SocketProtocol CServerSocket::GetProtocol()$/;"	f	class:CServerSocket
GetRandomResponseString	CMessagingServer.cpp	/^std::string CMessagingServer::GetRandomResponseString(int a_irandomStringLength)$/;"	f	class:CMessagingServer
GetServerConnectionQueueSize	CServerSocket.cpp	/^int CServerSocket::GetServerConnectionQueueSize()$/;"	f	class:CServerSocket
GetServerRunningStatus	CServerSocket.cpp	/^bool CServerSocket::GetServerRunningStatus()$/;"	f	class:CServerSocket
GetSocketCreatedStatus	CBasicSocket.cpp	/^bool CBasicSocket::GetSocketCreatedStatus()$/;"	f	class:CBasicSocket
GetSocketFD	CBasicSocket.cpp	/^int CBasicSocket::GetSocketFD()$/;"	f	class:CBasicSocket
GetSocketInstance	CServerSocket.cpp	/^CBasicSocket* CServerSocket::GetSocketInstance()$/;"	f	class:CServerSocket
GetSocketType	CServerSocket.cpp	/^SocketType CServerSocket::GetSocketType()$/;"	f	class:CServerSocket
GetSourceIP	CServerSocket.cpp	/^std::string CServerSocket::GetSourceIP()$/;"	f	class:CServerSocket
InvalidSocketProtocol	CBasicSocket.h	/^	InvalidSocketProtocol = -1$/;"	e	enum:SocketProtocol
InvalidSocketType	CBasicSocket.h	/^	InvalidSocketType = -1$/;"	e	enum:SocketType
Listen	CBasicSocket.cpp	/^bool CBasicSocket::Listen( int a_iqueueLength)$/;"	f	class:CBasicSocket
Listen	CServerSocket.cpp	/^bool CServerSocket::Listen()$/;"	f	class:CServerSocket
MAX_BUFFER_SIZE	CBasicSocket.h	11;"	d
MAX_RANDOM_STRING_LENGTH	CMessagingServer.cpp	13;"	d	file:
MakeServerSocketInstance	CServerSocket.cpp	/^bool   CServerSocket::MakeServerSocketInstance(bool a_bnewSocketFlag, CBasicSocket* a_upsocketObject)$/;"	f	class:CServerSocket
MakeServerSocketInstance	CServerSocket.cpp	/^bool   CServerSocket::MakeServerSocketInstance(bool a_bnewSocketFlag,int a_isocketFD, CBasicSocket* a_upsocketObject)$/;"	f	class:CServerSocket
MakeSocketObject	CSynchronousSocketFactory.cpp	/^CBasicSocket* CSynchronousSocketFactory::MakeSocketObject(int a_iprotocol)$/;"	f	class:CSynchronousSocketFactory
MessageData	CMessagingServer.h	/^struct MessageData$/;"	s
MessageProcessorAction	CMessagingServer.h	/^enum MessageProcessorAction$/;"	g
OBJS	Makefile	/^OBJS = CBasicSocket.o CMessagingServer.o CServerSocket.o CSynchronousSocketFactory.o CTCPSocket.o MessagingServerMain.o $/;"	m
OnAccept	CMessagingServer.cpp	/^void CMessagingServer::OnAccept(int a_isocketFD)$/;"	f	class:CMessagingServer
OnAccept	CServerSocket.cpp	/^void CServerSocket::OnAccept(int a_isocketFD)$/;"	f	class:CServerSocket
OnDisconnect	CMessagingServer.cpp	/^void CMessagingServer::OnDisconnect(int a_isocketFD)$/;"	f	class:CMessagingServer
OnDisconnect	CServerSocket.cpp	/^void CServerSocket::OnDisconnect(int a_isocketFD)$/;"	f	class:CServerSocket
OnMessageReceive	CServerSocket.cpp	/^void CServerSocket::OnMessageReceive(std::string a_sreceivedMessage, int a_ireceivedMessageLength)$/;"	f	class:CServerSocket
OnMessageReceived	CMessagingServer.cpp	/^void CMessagingServer::OnMessageReceived(std::string a_sreceivedMessage,int a_ireceivedMessageLength)$/;"	f	class:CMessagingServer
ProcessMessage	CMessagingServer.cpp	/^MessageProcessorAction CMessagingServer::ProcessMessage(std::string a_sreceivedData, std::string& a_responseMessage)$/;"	f	class:CMessagingServer
Receive	CBasicSocket.cpp	/^bool CBasicSocket::Receive(std::string &a_sdata, int& a_imessageLength)$/;"	f	class:CBasicSocket
Receive	CTCPSocket.cpp	/^bool CTCPSocket::Receive(std::string& a_sreceivedData, int& a_ireceivedMessageLength)$/;"	f	class:CTCPSocket
ReceiveMessage	CServerSocket.cpp	/^bool CServerSocket::ReceiveMessage(std::string& a_sdata, int& a_ireceivedDataLength)$/;"	f	class:CServerSocket
SCTPSocket	CBasicSocket.h	/^	SCTPSocket = IPPROTO_SCTP,$/;"	e	enum:SocketProtocol
Send	CBasicSocket.cpp	/^bool CBasicSocket::Send(std::string a_sdata, int& a_imessageLength)$/;"	f	class:CBasicSocket
Send	CTCPSocket.cpp	/^bool CTCPSocket::Send(std::string a_sdata , int& a_imessageLength)$/;"	f	class:CTCPSocket
SendMessage	CServerSocket.cpp	/^bool CServerSocket::SendMessage(std::string a_sdata, int& a_imessageLength)$/;"	f	class:CServerSocket
SendResponse	CMessagingServer.h	/^	SendResponse = 1,$/;"	e	enum:MessageProcessorAction
SetConnectionStatus	CBasicSocket.cpp	/^void CBasicSocket::SetConnectionStatus(bool a_bconnectionStatus)$/;"	f	class:CBasicSocket
SetMaxMessageHandlerThreads	CMessagingServer.cpp	/^void CMessagingServer::SetMaxMessageHandlerThreads(int a_imaxMessageHandlerThreads)$/;"	f	class:CMessagingServer
SetMessagingServerActiveStatus	CMessagingServer.cpp	/^void CMessagingServer::SetMessagingServerActiveStatus(bool a_bmessagingServerActiveStatus)$/;"	f	class:CMessagingServer
SetPortNumber	CServerSocket.cpp	/^void CServerSocket::SetPortNumber(int a_iportNumber)$/;"	f	class:CServerSocket
SetProtocol	CServerSocket.cpp	/^void CServerSocket::SetProtocol(SocketProtocol a_uprotocol)$/;"	f	class:CServerSocket
SetServerConnectionQueueSize	CServerSocket.cpp	/^void CServerSocket::SetServerConnectionQueueSize(int a_iserverConnectionQueueSize)$/;"	f	class:CServerSocket
SetServerRunningStatus	CServerSocket.cpp	/^void CServerSocket::SetServerRunningStatus(bool a_bserverRunningStatus)$/;"	f	class:CServerSocket
SetSocketCreatedStatus	CBasicSocket.cpp	/^void CBasicSocket::SetSocketCreatedStatus(bool a_bsocketCreatedStatus)$/;"	f	class:CBasicSocket
SetSocketFD	CBasicSocket.cpp	/^void CBasicSocket::SetSocketFD(int a_isocketFD)$/;"	f	class:CBasicSocket
SetSocketInstance	CServerSocket.cpp	/^void CServerSocket::SetSocketInstance(CBasicSocket* a_upsocketObject)$/;"	f	class:CServerSocket
SetSocketType	CServerSocket.cpp	/^void CServerSocket::SetSocketType(SocketType a_usocketType)$/;"	f	class:CServerSocket
SetSourceIP	CServerSocket.cpp	/^void CServerSocket::SetSourceIP(std::string a_ssourceIP)$/;"	f	class:CServerSocket
Shutdown	CBasicSocket.cpp	/^bool CBasicSocket::Shutdown()$/;"	f	class:CBasicSocket
SocketProtocol	CBasicSocket.h	/^enum SocketProtocol$/;"	g
SocketType	CBasicSocket.h	/^enum SocketType$/;"	g
StartServer	CServerSocket.cpp	/^bool CServerSocket::StartServer()$/;"	f	class:CServerSocket
StartThreads	CMessagingServer.cpp	/^bool CMessagingServer::StartThreads()$/;"	f	class:CMessagingServer
SynchronousSocket	CBasicSocket.h	/^	SynchronousSocket = 1,$/;"	e	enum:SocketType
TCPSocket	CBasicSocket.h	/^	TCPSocket = IPPROTO_TCP,$/;"	e	enum:SocketProtocol
ThreadDeleteObseleteMessageHandlers	CMessagingServer.cpp	/^void* CMessagingServer::ThreadDeleteObseleteMessageHandlers(void* a_uparguments)$/;"	f	class:CMessagingServer
ThreadListenConnections	CServerSocket.cpp	/^void* CServerSocket::ThreadListenConnections(void* a_uparguments)$/;"	f	class:CServerSocket
ThreadMessageHandler	CMessagingServer.cpp	/^void* CMessagingServer::ThreadMessageHandler(void* a_uparguments)$/;"	f	class:CMessagingServer
ThreadMessageReceiver	CServerSocket.cpp	/^void* ThreadMessageReceiver(void* a_uparguments)$/;"	f
ThreadMessageSender	CMessagingServer.cpp	/^void* CMessagingServer::ThreadMessageSender(void* a_uparguments)$/;"	f	class:CMessagingServer
UDPSocket	CBasicSocket.h	/^	UDPSocket = IPPROTO_UDP,$/;"	e	enum:SocketProtocol
__CBASICSOCKET_H__	CBasicSocket.h	2;"	d
__CMESSAGINGSERVER_H__	CMessagingServer.h	2;"	d
__CSERVERSOCKET_H__	CServerSocket.h	2;"	d
__CSOCKETFACTORY_H__	CSocketFactory.h	2;"	d
__CSYNCHRONOUSSOCKETFACTORY_H__	CSynchronousSocketFactory.h	2;"	d
__CTCPSOCKET_H__	CTCPSocket.h	2;"	d
m_bconnectionStatus	CBasicSocket.h	/^	bool 		m_bconnectionStatus;$/;"	m	class:CBasicSocket
m_bmessagingServerActiveStatus	CMessagingServer.h	/^	bool					m_bmessagingServerActiveStatus;$/;"	m	class:CMessagingServer
m_bserverRunningStatus	CServerSocket.cpp	/^bool CServerSocket::m_bserverRunningStatus = false;$/;"	m	class:CServerSocket	file:
m_bserverRunningStatus	CServerSocket.h	/^	static bool		m_bserverRunningStatus;$/;"	m	class:CServerSocket
m_bsocketCreatedStatus	CBasicSocket.h	/^	bool		m_bsocketCreatedStatus;$/;"	m	class:CBasicSocket
m_imaxMessageHandlerThreads	CMessagingServer.h	/^	int					m_imaxMessageHandlerThreads;$/;"	m	class:CMessagingServer
m_iserverConnectionQueueSize	CServerSocket.cpp	/^int CServerSocket::m_iserverConnectionQueueSize = 20;$/;"	m	class:CServerSocket	file:
m_iserverConnectionQueueSize	CServerSocket.h	/^	static int		m_iserverConnectionQueueSize;$/;"	m	class:CServerSocket
m_isocketFD	CBasicSocket.h	/^	int 		m_isocketFD;$/;"	m	class:CBasicSocket
m_isocketFD	CMessagingServer.h	/^	int m_isocketFD;$/;"	m	struct:MessageData
m_isourcePortNumber	CServerSocket.cpp	/^int CServerSocket::m_isourcePortNumber = -1;$/;"	m	class:CServerSocket	file:
m_isourcePortNumber	CServerSocket.h	/^	static int		m_isourcePortNumber;$/;"	m	class:CServerSocket
m_mactiveMessagingServerList	CMessagingServer.cpp	/^std::map<int,CMessagingServer*> CMessagingServer::m_mactiveMessagingServerList;$/;"	m	class:CMessagingServer	file:
m_mactiveMessagingServerList	CMessagingServer.h	/^	static std::map<int,CMessagingServer*> 	m_mactiveMessagingServerList;$/;"	m	class:CMessagingServer
m_qobseleteMessageHandlerQueue	CMessagingServer.cpp	/^std::queue<int> CMessagingServer::m_qobseleteMessageHandlerQueue;$/;"	m	class:CMessagingServer	file:
m_qobseleteMessageHandlerQueue	CMessagingServer.h	/^	static std::queue<int>			m_qobseleteMessageHandlerQueue;$/;"	m	class:CMessagingServer
m_qreceivedMessageQueue	CMessagingServer.cpp	/^std::queue<MessageData*> CMessagingServer::m_qreceivedMessageQueue;$/;"	m	class:CMessagingServer	file:
m_qreceivedMessageQueue	CMessagingServer.h	/^	static std::queue<MessageData*>		m_qreceivedMessageQueue;$/;"	m	class:CMessagingServer
m_qsendMessageQueue	CMessagingServer.cpp	/^std::queue<MessageData*> CMessagingServer::m_qsendMessageQueue;$/;"	m	class:CMessagingServer	file:
m_qsendMessageQueue	CMessagingServer.h	/^	static std::queue<MessageData*>		m_qsendMessageQueue;$/;"	m	class:CMessagingServer
m_sdata	CMessagingServer.h	/^	std::string m_sdata;$/;"	m	struct:MessageData
m_ssourceIP	CServerSocket.cpp	/^std::string CServerSocket::m_ssourceIP = "";$/;"	m	class:CServerSocket	file:
m_ssourceIP	CServerSocket.h	/^	static std::string	m_ssourceIP;$/;"	m	class:CServerSocket
m_ulistenThreadId	CServerSocket.cpp	/^pthread_t CServerSocket::m_ulistenThreadId = -1;$/;"	m	class:CServerSocket	file:
m_ulistenThreadId	CServerSocket.h	/^	static pthread_t	m_ulistenThreadId;$/;"	m	class:CServerSocket
m_umessageHandlerthreadId	CMessagingServer.cpp	/^pthread_t  CMessagingServer::m_umessageHandlerthreadId;$/;"	m	class:CMessagingServer	file:
m_umessageHandlerthreadId	CMessagingServer.h	/^	static pthread_t			m_umessageHandlerthreadId;$/;"	m	class:CMessagingServer
m_umessageReceiverThreadId	CMessagingServer.cpp	/^pthread_t CMessagingServer::m_umessageReceiverThreadId;$/;"	m	class:CMessagingServer	file:
m_umessageReceiverThreadId	CMessagingServer.h	/^	static pthread_t			m_umessageReceiverThreadId;$/;"	m	class:CMessagingServer
m_umessageSenderthreadId	CMessagingServer.cpp	/^pthread_t CMessagingServer::m_umessageSenderthreadId;$/;"	m	class:CMessagingServer	file:
m_umessageSenderthreadId	CMessagingServer.h	/^	static pthread_t			m_umessageSenderthreadId;$/;"	m	class:CMessagingServer
m_uprotocol	CServerSocket.cpp	/^SocketProtocol CServerSocket::m_uprotocol = InvalidSocketProtocol;$/;"	m	class:CServerSocket	file:
m_uprotocol	CServerSocket.h	/^	static SocketProtocol	m_uprotocol;$/;"	m	class:CServerSocket
m_upserverSocketObject	CServerSocket.h	/^	CBasicSocket*	m_upserverSocketObject;		$/;"	m	class:CServerSocket
m_usocketType	CServerSocket.cpp	/^SocketType CServerSocket::m_usocketType = InvalidSocketType;$/;"	m	class:CServerSocket	file:
m_usocketType	CServerSocket.h	/^	static SocketType	m_usocketType;$/;"	m	class:CServerSocket
main	MessagingServerMain.cpp	/^int main()$/;"	f
~CBasicSocket	CBasicSocket.cpp	/^CBasicSocket::~CBasicSocket()$/;"	f	class:CBasicSocket
~CMessagingServer	CMessagingServer.cpp	/^CMessagingServer::~CMessagingServer()$/;"	f	class:CMessagingServer
~CServerSocket	CServerSocket.cpp	/^CServerSocket::~CServerSocket()$/;"	f	class:CServerSocket

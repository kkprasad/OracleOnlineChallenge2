!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
Accept	CBasicSocket.cpp	/^int CBasicSocket::Accept()$/;"	f	class:CBasicSocket
Accept	CServerSocket.cpp	/^int CServerSocket::Accept()$/;"	f	class:CServerSocket
AsynchronousSocket	Definitions.h	/^        AsynchronousSocket = 2,$/;"	e	enum:SocketType
Bind	CBasicSocket.cpp	/^bool CBasicSocket::Bind(std::string a_sSourceIP, int a_iPortNumber)$/;"	f	class:CBasicSocket
Bind	CServerSocket.cpp	/^bool CServerSocket::Bind()$/;"	f	class:CServerSocket
Bind	CTCPSocket.cpp	/^bool CTCPSocket::Bind(std::string a_sSourceIP,int a_iSourcePortNumber)$/;"	f	class:CTCPSocket
CBasicSocket	CBasicSocket.cpp	/^CBasicSocket::CBasicSocket()$/;"	f	class:CBasicSocket
CBasicSocket	CBasicSocket.h	/^class CBasicSocket$/;"	c
CC	Makefile	/^CC= g++ -w -g$/;"	m
CConfigData	CConfigData.cpp	/^CConfigData::CConfigData()$/;"	f	class:CConfigData
CConfigData	CConfigData.h	/^class CConfigData$/;"	c
CException	CException.cpp	/^CException::CException( const char* pMsg) {$/;"	f	class:CException
CException	CException.cpp	/^CException::CException( std::string sMsg) {$/;"	f	class:CException
CException	CException.cpp	/^CException::CException() {$/;"	f	class:CException
CException	CException.h	/^class CException:public std::exception$/;"	c
CFileHandler	CFileHandler.cpp	/^CFileHandler::CFileHandler()$/;"	f	class:CFileHandler
CFileHandler	CFileHandler.h	/^class CFileHandler$/;"	c
CMessagingServer	CMessagingServer.cpp	/^CMessagingServer::CMessagingServer()$/;"	f	class:CMessagingServer
CMessagingServer	CMessagingServer.h	/^class CMessagingServer:public CServerSocket$/;"	c
CServerSocket	CServerSocket.cpp	/^CServerSocket::CServerSocket()$/;"	f	class:CServerSocket
CServerSocket	CServerSocket.h	/^class CServerSocket$/;"	c
CSocketFactory	CSocketFactory.h	/^class CSocketFactory$/;"	c
CSynchronousSocketFactory	CSynchronousSocketFactory.cpp	/^CSynchronousSocketFactory::CSynchronousSocketFactory()$/;"	f	class:CSynchronousSocketFactory
CSynchronousSocketFactory	CSynchronousSocketFactory.h	/^class CSynchronousSocketFactory:public CSocketFactory$/;"	c
CTCPSocket	CTCPSocket.cpp	/^CTCPSocket::CTCPSocket()$/;"	f	class:CTCPSocket
CTCPSocket	CTCPSocket.h	/^class CTCPSocket:public CBasicSocket$/;"	c
ClearFilePointerMap	CFileHandler.cpp	/^void CFileHandler::ClearFilePointerMap()$/;"	f	class:CFileHandler
Close	CBasicSocket.cpp	/^bool CBasicSocket::Close()$/;"	f	class:CBasicSocket
CloseConnection	CMessagingServer.h	/^	CloseConnection = 2$/;"	e	enum:MessageProcessorAction
Connect	CBasicSocket.cpp	/^bool CBasicSocket::Connect(std::string a_sDestinationIP, int a_iDestinationPortNumber)$/;"	f	class:CBasicSocket
Connect	CTCPSocket.cpp	/^bool CTCPSocket::Connect(std::string a_sDestinationIP, int a_iDestinationPortNumber)$/;"	f	class:CTCPSocket
Create	CBasicSocket.cpp	/^bool CBasicSocket::Create()$/;"	f	class:CBasicSocket
Create	CTCPSocket.cpp	/^bool CTCPSocket::Create()$/;"	f	class:CTCPSocket
DisconnectClient	CServerSocket.cpp	/^bool CServerSocket::DisconnectClient()$/;"	f	class:CServerSocket
ExecuteExitProcedures	MessagingServerMain.cpp	/^void ExecuteExitProcedures(int a_iSignalNumber)$/;"	f
ForceClose	CBasicSocket.cpp	/^void  CBasicSocket::ForceClose(int a_iSocketFD)$/;"	f	class:CBasicSocket
ForceDisconnect	CServerSocket.cpp	/^void CServerSocket::ForceDisconnect(int a_iSocketFD)$/;"	f	class:CServerSocket
ForceShutdown	CBasicSocket.cpp	/^void CBasicSocket::ForceShutdown(int a_iSocketFD)$/;"	f	class:CBasicSocket
GetConfigurationFileName	CConfigData.cpp	/^std::string CConfigData::GetConfigurationFileName()$/;"	f	class:CConfigData
GetConnectionStatus	CBasicSocket.cpp	/^bool CBasicSocket::GetConnectionStatus()$/;"	f	class:CBasicSocket
GetInstance	CFileHandler.cpp	/^CFileHandler CFileHandler::GetInstance()$/;"	f	class:CFileHandler
GetLogFileDirectory	CConfigData.cpp	/^std::string CConfigData::GetLogFileDirectory()$/;"	f	class:CConfigData
GetLogFileDirectory	CFileHandler.cpp	/^std::string CFileHandler::GetLogFileDirectory()$/;"	f	class:CFileHandler
GetMaxMessageHandlerThreads	CConfigData.cpp	/^int CConfigData::GetMaxMessageHandlerThreads()$/;"	f	class:CConfigData
GetMaxMessageHandlerThreads	CMessagingServer.cpp	/^int CMessagingServer::GetMaxMessageHandlerThreads()$/;"	f	class:CMessagingServer
GetMaxMessageSenderThreads	CConfigData.cpp	/^int CConfigData::GetMaxMessageSenderThreads()$/;"	f	class:CConfigData
GetMaxMessageSenderThreads	CMessagingServer.cpp	/^int CMessagingServer::GetMaxMessageSenderThreads()$/;"	f	class:CMessagingServer
GetMessagingServerActiveStatus	CMessagingServer.cpp	/^bool CMessagingServer::GetMessagingServerActiveStatus()$/;"	f	class:CMessagingServer
GetParam	CConfigData.cpp	/^std::string CConfigData::GetParam( std::string a_sParameter)$/;"	f	class:CConfigData
GetPortNumber	CServerSocket.cpp	/^int CServerSocket::GetPortNumber()$/;"	f	class:CServerSocket
GetPrivateProfileString	CFileHandler.cpp	/^long CFileHandler::GetPrivateProfileString(const char *a_cpSection,const char *a_cpKey,const char *a_cpDefaultString, char *a_cpData,const char *a_cpFileName)$/;"	f	class:CFileHandler
GetProtocol	CServerSocket.cpp	/^SocketProtocol CServerSocket::GetProtocol()$/;"	f	class:CServerSocket
GetProtocolType	CConfigData.cpp	/^SocketProtocol CConfigData::GetProtocolType()$/;"	f	class:CConfigData
GetRandomResponseString	CMessagingServer.cpp	/^std::string CMessagingServer::GetRandomResponseString(int a_iRandomStringLength)$/;"	f	class:CMessagingServer
GetServerConnectionQueueSize	CServerSocket.cpp	/^int CServerSocket::GetServerConnectionQueueSize()$/;"	f	class:CServerSocket
GetServerPortNumber	CConfigData.cpp	/^int CConfigData::GetServerPortNumber()$/;"	f	class:CConfigData
GetServerRunningStatus	CServerSocket.cpp	/^bool CServerSocket::GetServerRunningStatus()$/;"	f	class:CServerSocket
GetServerSourceIP	CConfigData.cpp	/^std::string CConfigData::GetServerSourceIP()$/;"	f	class:CConfigData
GetSocketCreatedStatus	CBasicSocket.cpp	/^bool CBasicSocket::GetSocketCreatedStatus()$/;"	f	class:CBasicSocket
GetSocketFD	CBasicSocket.cpp	/^int CBasicSocket::GetSocketFD()$/;"	f	class:CBasicSocket
GetSocketInstance	CServerSocket.cpp	/^CBasicSocket* CServerSocket::GetSocketInstance()$/;"	f	class:CServerSocket
GetSocketType	CConfigData.cpp	/^SocketType CConfigData::GetSocketType()$/;"	f	class:CConfigData
GetSocketType	CServerSocket.cpp	/^SocketType CServerSocket::GetSocketType()$/;"	f	class:CServerSocket
GetSourceIP	CServerSocket.cpp	/^std::string CServerSocket::GetSourceIP()$/;"	f	class:CServerSocket
GetTime	CFileHandler.cpp	/^std::string CFileHandler::GetTime()$/;"	f	class:CFileHandler
INCLUDE	Makefile	/^INCLUDE = -I.$/;"	m
InvalidSocketProtocol	Definitions.h	/^        InvalidSocketProtocol = -1$/;"	e	enum:SocketProtocol
InvalidSocketType	Definitions.h	/^        InvalidSocketType = -1$/;"	e	enum:SocketType
Listen	CBasicSocket.cpp	/^bool CBasicSocket::Listen( int a_iQueueLength)$/;"	f	class:CBasicSocket
Listen	CServerSocket.cpp	/^bool CServerSocket::Listen()$/;"	f	class:CServerSocket
LoadConfigurationData	CConfigData.cpp	/^bool CConfigData::LoadConfigurationData()$/;"	f	class:CConfigData
MAX_BUFFER_SIZE	CBasicSocket.h	13;"	d
MAX_RANDOM_STRING_LENGTH	CMessagingServer.cpp	19;"	d	file:
MakeServerSocketInstance	CServerSocket.cpp	/^bool   CServerSocket::MakeServerSocketInstance(bool a_bNewSocketFlag)$/;"	f	class:CServerSocket
MakeServerSocketInstance	CServerSocket.cpp	/^bool   CServerSocket::MakeServerSocketInstance(bool a_bNewSocketFlag,int a_iSocketFD)$/;"	f	class:CServerSocket
MakeSocketObject	CSynchronousSocketFactory.cpp	/^CBasicSocket* CSynchronousSocketFactory::MakeSocketObject(int a_iprotocol)$/;"	f	class:CSynchronousSocketFactory
MessageData	CMessagingServer.h	/^struct MessageData$/;"	s
MessageProcessorAction	CMessagingServer.h	/^enum MessageProcessorAction$/;"	g
OBJS	Makefile	/^OBJS = CBasicSocket.o CMessagingServer.o CServerSocket.o CSynchronousSocketFactory.o CTCPSocket.o MessagingServerMain.o CConfigData.o CFileHandler.o CException.o$/;"	m
OnAccept	CMessagingServer.cpp	/^void CMessagingServer::OnAccept(int a_iSocketFD)$/;"	f	class:CMessagingServer
OnAccept	CServerSocket.cpp	/^void CServerSocket::OnAccept(int a_iSocketFD)$/;"	f	class:CServerSocket
OnDisconnect	CMessagingServer.cpp	/^void CMessagingServer::OnDisconnect(int a_iSocketFD)$/;"	f	class:CMessagingServer
OnDisconnect	CServerSocket.cpp	/^void CServerSocket::OnDisconnect(int a_iSocketFD)$/;"	f	class:CServerSocket
OnMessageReceive	CMessagingServer.cpp	/^void CMessagingServer::OnMessageReceive(std::string a_sReceivedMessage,int a_iReceivedMessageLength)$/;"	f	class:CMessagingServer
OnMessageReceive	CServerSocket.cpp	/^void CServerSocket::OnMessageReceive(std::string a_sReceivedMessage, int a_iReceivedMessageLength)$/;"	f	class:CServerSocket
ProcessMessage	CMessagingServer.cpp	/^MessageProcessorAction CMessagingServer::ProcessMessage(std::string a_sReceivedData, std::string& a_sResponseMessage)$/;"	f	class:CMessagingServer
Receive	CBasicSocket.cpp	/^bool CBasicSocket::Receive(std::string &a_sData, int& a_iMessageLength)$/;"	f	class:CBasicSocket
Receive	CTCPSocket.cpp	/^bool CTCPSocket::Receive(std::string& a_sReceivedData, int& a_iReceivedMessageLength)$/;"	f	class:CTCPSocket
ReceiveMessage	CServerSocket.cpp	/^bool CServerSocket::ReceiveMessage(std::string& a_sData, int& a_iReceivedDataLength)$/;"	f	class:CServerSocket
RemovePIDFile	MessagingServerMain.cpp	/^void RemovePIDFile()$/;"	f
SCTPSocket	Definitions.h	/^        SCTPSocket = IPPROTO_SCTP,$/;"	e	enum:SocketProtocol
Send	CBasicSocket.cpp	/^bool CBasicSocket::Send(std::string a_sData, int& a_iMessageLength)$/;"	f	class:CBasicSocket
Send	CTCPSocket.cpp	/^bool CTCPSocket::Send(std::string a_sData , int& a_iMessageLength)$/;"	f	class:CTCPSocket
SendMessage	CServerSocket.cpp	/^bool CServerSocket::SendMessage(std::string a_sData, int& a_iMessageLength)$/;"	f	class:CServerSocket
SendResponse	CMessagingServer.h	/^	SendResponse = 1,$/;"	e	enum:MessageProcessorAction
SetConfigurationFileName	CConfigData.cpp	/^void CConfigData::SetConfigurationFileName(std::string a_sConfigurationFileName)$/;"	f	class:CConfigData
SetConnectionStatus	CBasicSocket.cpp	/^void CBasicSocket::SetConnectionStatus(bool a_bConnectionStatus)$/;"	f	class:CBasicSocket
SetLogFileDirectory	CConfigData.cpp	/^void CConfigData::SetLogFileDirectory(std::string a_sLogFileDirectory)$/;"	f	class:CConfigData
SetLogFileDirectory	CFileHandler.cpp	/^void CFileHandler::SetLogFileDirectory(std::string a_sLogFileDirectory)$/;"	f	class:CFileHandler
SetMaxMessageHandlerThreads	CConfigData.cpp	/^void CConfigData::SetMaxMessageHandlerThreads(int a_iMaxMessageHandlerThreads)$/;"	f	class:CConfigData
SetMaxMessageHandlerThreads	CMessagingServer.cpp	/^void CMessagingServer::SetMaxMessageHandlerThreads(int a_iMaxMessageHandlerThreads)$/;"	f	class:CMessagingServer
SetMaxMessageSenderThreads	CConfigData.cpp	/^void CConfigData::SetMaxMessageSenderThreads(int a_iMaxMessageSenderThreads)$/;"	f	class:CConfigData
SetMaxMessageSenderThreads	CMessagingServer.cpp	/^void CMessagingServer::SetMaxMessageSenderThreads(int a_iMaxMessageSendThreads)$/;"	f	class:CMessagingServer
SetMessagingServerActiveStatus	CMessagingServer.cpp	/^void CMessagingServer::SetMessagingServerActiveStatus(bool a_bMessagingServerActiveStatus)$/;"	f	class:CMessagingServer
SetPortNumber	CServerSocket.cpp	/^void CServerSocket::SetPortNumber(int a_iPortNumber)$/;"	f	class:CServerSocket
SetProtocol	CConfigData.cpp	/^void CConfigData::SetProtocol(std::string a_sProtocol)$/;"	f	class:CConfigData
SetProtocol	CServerSocket.cpp	/^void CServerSocket::SetProtocol(SocketProtocol a_uProtocol)$/;"	f	class:CServerSocket
SetServerConnectionQueueSize	CServerSocket.cpp	/^void CServerSocket::SetServerConnectionQueueSize(int a_iServerConnectionQueueSize)$/;"	f	class:CServerSocket
SetServerPortNumber	CConfigData.cpp	/^void CConfigData::SetServerPortNumber(int a_iServerPortNumber)$/;"	f	class:CConfigData
SetServerRunningStatus	CServerSocket.cpp	/^void CServerSocket::SetServerRunningStatus(bool a_bServerRunningStatus)$/;"	f	class:CServerSocket
SetServerSourceIP	CConfigData.cpp	/^void CConfigData::SetServerSourceIP(std::string a_sServerSourceIP)$/;"	f	class:CConfigData
SetSocketCreatedStatus	CBasicSocket.cpp	/^void CBasicSocket::SetSocketCreatedStatus(bool a_bSocketCreatedStatus)$/;"	f	class:CBasicSocket
SetSocketFD	CBasicSocket.cpp	/^void CBasicSocket::SetSocketFD(int a_iSocketFD)$/;"	f	class:CBasicSocket
SetSocketInstance	CServerSocket.cpp	/^void CServerSocket::SetSocketInstance(CBasicSocket* a_upSocketObject)$/;"	f	class:CServerSocket
SetSocketType	CConfigData.cpp	/^void CConfigData::SetSocketType(std::string a_sSocketType)$/;"	f	class:CConfigData
SetSocketType	CServerSocket.cpp	/^void CServerSocket::SetSocketType(SocketType a_uSocketType)$/;"	f	class:CServerSocket
SetSourceIP	CServerSocket.cpp	/^void CServerSocket::SetSourceIP(std::string a_ssourceIP)$/;"	f	class:CServerSocket
Shutdown	CBasicSocket.cpp	/^bool CBasicSocket::Shutdown()$/;"	f	class:CBasicSocket
SocketProtocol	Definitions.h	/^enum SocketProtocol$/;"	g
SocketType	Definitions.h	/^enum SocketType$/;"	g
StartServer	CServerSocket.cpp	/^bool CServerSocket::StartServer()$/;"	f	class:CServerSocket
StartThreads	CMessagingServer.cpp	/^bool CMessagingServer::StartThreads()$/;"	f	class:CMessagingServer
StopServer	CServerSocket.cpp	/^bool CServerSocket::StopServer()$/;"	f	class:CServerSocket
StopThreads	CMessagingServer.cpp	/^bool CMessagingServer::StopThreads()$/;"	f	class:CMessagingServer
SynchronousSocket	Definitions.h	/^        SynchronousSocket = 1,$/;"	e	enum:SocketType
TCPSocket	Definitions.h	/^        TCPSocket = IPPROTO_TCP,$/;"	e	enum:SocketProtocol
ThreadDeleteObseleteMessageHandlers	CMessagingServer.cpp	/^void* CMessagingServer::ThreadDeleteObseleteMessageHandlers(void* a_upArguments)$/;"	f	class:CMessagingServer
ThreadListenConnections	CServerSocket.cpp	/^void* CServerSocket::ThreadListenConnections(void* a_upArguments)$/;"	f	class:CServerSocket
ThreadMessageHandler	CMessagingServer.cpp	/^void* CMessagingServer::ThreadMessageHandler(void* a_upArguments)$/;"	f	class:CMessagingServer
ThreadMessageReceiver	CServerSocket.cpp	/^void* CServerSocket::ThreadMessageReceiver(void* a_upArguments)$/;"	f	class:CServerSocket
ThreadMessageSender	CMessagingServer.cpp	/^void* CMessagingServer::ThreadMessageSender(void* a_upArguments)$/;"	f	class:CMessagingServer
UDPSocket	Definitions.h	/^        UDPSocket = IPPROTO_UDP,$/;"	e	enum:SocketProtocol
UnSetSocketInstance	CServerSocket.cpp	/^void CServerSocket::UnSetSocketInstance()$/;"	f	class:CServerSocket
WritePIDFile	MessagingServerMain.cpp	/^bool WritePIDFile()$/;"	f
WriteToFile	CFileHandler.cpp	/^bool CFileHandler::WriteToFile(const int a_iFileNumber,const char* a_cpFormat,...)$/;"	f	class:CFileHandler
WriteToSysLog	CFileHandler.cpp	/^bool CFileHandler::WriteToSysLog(const char* a_cpFormat,...)$/;"	f	class:CFileHandler
_CEXCEPTION_H__	CException.h	2;"	d
__CBASICSOCKET_H__	CBasicSocket.h	2;"	d
__CCONFIGDATA_H__	CConfigData.h	2;"	d
__CFILEHANDLER_H__	CFileHandler.h	2;"	d
__CMESSAGINGSERVER_H__	CMessagingServer.h	2;"	d
__CSERVERSOCKET_H__	CServerSocket.h	2;"	d
__CSOCKETFACTORY_H__	CSocketFactory.h	2;"	d
__CSYNCHRONOUSSOCKETFACTORY_H__	CSynchronousSocketFactory.h	2;"	d
__CTCPSOCKET_H__	CTCPSocket.h	2;"	d
__DEFINITIONS_H__	Definitions.h	2;"	d
g_iserverPortNumber	MessagingServerMain.cpp	/^int g_iserverPortNumber = -1;$/;"	v
g_sConfigurationFileName	MessagingServerMain.cpp	/^std::string g_sConfigurationFileName;$/;"	v
g_sLogDirectory	MessagingServerMain.cpp	/^std::string g_sLogDirectory ;$/;"	v
g_sPIDFile	MessagingServerMain.cpp	/^std::string g_sPIDFile;$/;"	v
g_upMessagingServer	MessagingServerMain.cpp	/^CMessagingServer * g_upMessagingServer = NULL;$/;"	v
m_bConnectionStatus	CBasicSocket.h	/^	bool 		m_bConnectionStatus;$/;"	m	class:CBasicSocket
m_bMessagingServerActiveStatus	CMessagingServer.h	/^	bool					m_bMessagingServerActiveStatus;$/;"	m	class:CMessagingServer
m_bServerRunningStatus	CServerSocket.cpp	/^bool CServerSocket::m_bServerRunningStatus = false;$/;"	m	class:CServerSocket	file:
m_bServerRunningStatus	CServerSocket.h	/^	static bool		m_bServerRunningStatus;$/;"	m	class:CServerSocket
m_bSocketCreatedStatus	CBasicSocket.h	/^	bool		m_bSocketCreatedStatus;$/;"	m	class:CBasicSocket
m_iMaxMessageHandlerThreads	CConfigData.h	/^	int		m_iMaxMessageHandlerThreads;$/;"	m	class:CConfigData
m_iMaxMessageHandlerThreads	CMessagingServer.cpp	/^int CMessagingServer::m_iMaxMessageHandlerThreads = 0;$/;"	m	class:CMessagingServer	file:
m_iMaxMessageHandlerThreads	CMessagingServer.h	/^	static int				m_iMaxMessageHandlerThreads;$/;"	m	class:CMessagingServer
m_iMaxMessageSenderThreads	CConfigData.h	/^	int		m_iMaxMessageSenderThreads;$/;"	m	class:CConfigData
m_iMaxMessageSenderThreads	CMessagingServer.cpp	/^int CMessagingServer::m_iMaxMessageSenderThreads = 0;$/;"	m	class:CMessagingServer	file:
m_iMaxMessageSenderThreads	CMessagingServer.h	/^	static int				m_iMaxMessageSenderThreads;$/;"	m	class:CMessagingServer
m_iServerConnectionQueueSize	CServerSocket.cpp	/^int CServerSocket::m_iServerConnectionQueueSize = 20;$/;"	m	class:CServerSocket	file:
m_iServerConnectionQueueSize	CServerSocket.h	/^	static int		m_iServerConnectionQueueSize;$/;"	m	class:CServerSocket
m_iServerPortNumber	CConfigData.h	/^	int		m_iServerPortNumber;$/;"	m	class:CConfigData
m_iSocketFD	CBasicSocket.h	/^	int 		m_iSocketFD;$/;"	m	class:CBasicSocket
m_iSocketFD	CMessagingServer.h	/^	int m_iSocketFD;$/;"	m	struct:MessageData
m_iSourcePortNumber	CServerSocket.cpp	/^int CServerSocket::m_iSourcePortNumber = -1;$/;"	m	class:CServerSocket	file:
m_iSourcePortNumber	CServerSocket.h	/^	static int		m_iSourcePortNumber;$/;"	m	class:CServerSocket
m_mActiveMessagingServerList	CMessagingServer.cpp	/^std::map<int,CMessagingServer*> CMessagingServer::m_mActiveMessagingServerList;$/;"	m	class:CMessagingServer	file:
m_mActiveMessagingServerList	CMessagingServer.h	/^	static std::map<int,CMessagingServer*> 	m_mActiveMessagingServerList;$/;"	m	class:CMessagingServer
m_mFilePointerMap	CFileHandler.cpp	/^std::map<int,FILE*> CFileHandler::m_mFilePointerMap;$/;"	m	class:CFileHandler	file:
m_mFilePointerMap	CFileHandler.h	/^	static std::map<int,FILE*> 	m_mFilePointerMap;$/;"	m	class:CFileHandler
m_qObseleteMessageHandlerQueue	CMessagingServer.cpp	/^std::queue<int> CMessagingServer::m_qObseleteMessageHandlerQueue;$/;"	m	class:CMessagingServer	file:
m_qObseleteMessageHandlerQueue	CMessagingServer.h	/^	static std::queue<int>			m_qObseleteMessageHandlerQueue;$/;"	m	class:CMessagingServer
m_qReceivedMessageQueue	CMessagingServer.cpp	/^std::queue<MessageData*> CMessagingServer::m_qReceivedMessageQueue;$/;"	m	class:CMessagingServer	file:
m_qReceivedMessageQueue	CMessagingServer.h	/^	static std::queue<MessageData*>		m_qReceivedMessageQueue;$/;"	m	class:CMessagingServer
m_qSendMessageQueue	CMessagingServer.cpp	/^std::queue<MessageData*> CMessagingServer::m_qSendMessageQueue;$/;"	m	class:CMessagingServer	file:
m_qSendMessageQueue	CMessagingServer.h	/^	static std::queue<MessageData*>		m_qSendMessageQueue;$/;"	m	class:CMessagingServer
m_sConfigurationFileName	CConfigData.h	/^	std::string	m_sConfigurationFileName;$/;"	m	class:CConfigData
m_sData	CMessagingServer.h	/^	std::string m_sData;$/;"	m	struct:MessageData
m_sLogDirectory	CFileHandler.cpp	/^std::string CFileHandler::m_sLogDirectory;$/;"	m	class:CFileHandler	file:
m_sLogDirectory	CFileHandler.h	/^	static std::string		m_sLogDirectory;$/;"	m	class:CFileHandler
m_sLogFileDirectory	CConfigData.h	/^	std::string	m_sLogFileDirectory;$/;"	m	class:CConfigData
m_sMessage	CException.h	/^	std::string		m_sMessage;$/;"	m	class:CException
m_sServerSourceIP	CConfigData.h	/^	std::string	m_sServerSourceIP;$/;"	m	class:CConfigData
m_sSourceIP	CServerSocket.cpp	/^std::string CServerSocket::m_sSourceIP = "";$/;"	m	class:CServerSocket	file:
m_sSourceIP	CServerSocket.h	/^	static std::string	m_sSourceIP;$/;"	m	class:CServerSocket
m_uActiveServerListMutex	CMessagingServer.cpp	/^pthread_mutex_t CMessagingServer::m_uActiveServerListMutex = PTHREAD_MUTEX_INITIALIZER;$/;"	m	class:CMessagingServer	file:
m_uActiveServerListMutex	CMessagingServer.h	/^	static pthread_mutex_t			m_uActiveServerListMutex;$/;"	m	class:CMessagingServer
m_uFileHandlerInstance	CFileHandler.cpp	/^CFileHandler CFileHandler::m_uFileHandlerInstance;$/;"	m	class:CFileHandler	file:
m_uFileHandlerInstance	CFileHandler.h	/^	static CFileHandler		m_uFileHandlerInstance;$/;"	m	class:CFileHandler
m_uListenThreadId	CServerSocket.cpp	/^pthread_t CServerSocket::m_uListenThreadId = -1;$/;"	m	class:CServerSocket	file:
m_uListenThreadId	CServerSocket.h	/^	static pthread_t	m_uListenThreadId;$/;"	m	class:CServerSocket
m_uMessageHandlerMutex	CMessagingServer.cpp	/^pthread_mutex_t CMessagingServer::m_uMessageHandlerMutex = PTHREAD_MUTEX_INITIALIZER;$/;"	m	class:CMessagingServer	file:
m_uMessageHandlerMutex	CMessagingServer.h	/^	static pthread_mutex_t			m_uMessageHandlerMutex;$/;"	m	class:CMessagingServer
m_uMessageReceiverThreadId	CMessagingServer.cpp	/^pthread_t CMessagingServer::m_uMessageReceiverThreadId;$/;"	m	class:CMessagingServer	file:
m_uMessageReceiverThreadId	CMessagingServer.h	/^	static pthread_t			m_uMessageReceiverThreadId;$/;"	m	class:CMessagingServer
m_uObseleteMessageHandlerthreadId	CMessagingServer.cpp	/^pthread_t CMessagingServer::m_uObseleteMessageHandlerthreadId;$/;"	m	class:CMessagingServer	file:
m_uObseleteMessageHandlerthreadId	CMessagingServer.h	/^	static pthread_t			m_uObseleteMessageHandlerthreadId;$/;"	m	class:CMessagingServer
m_uProtocol	CConfigData.h	/^	SocketProtocol	m_uProtocol;$/;"	m	class:CConfigData
m_uProtocol	CServerSocket.cpp	/^SocketProtocol CServerSocket::m_uProtocol = InvalidSocketProtocol;$/;"	m	class:CServerSocket	file:
m_uProtocol	CServerSocket.h	/^	static SocketProtocol	m_uProtocol;$/;"	m	class:CServerSocket
m_uSendMessageMutex	CMessagingServer.cpp	/^pthread_mutex_t CMessagingServer::m_uSendMessageMutex = PTHREAD_MUTEX_INITIALIZER;$/;"	m	class:CMessagingServer	file:
m_uSendMessageMutex	CMessagingServer.h	/^	static pthread_mutex_t			m_uSendMessageMutex;$/;"	m	class:CMessagingServer
m_uSocketType	CConfigData.h	/^	SocketType	m_uSocketType;$/;"	m	class:CConfigData
m_uSocketType	CServerSocket.cpp	/^SocketType CServerSocket::m_uSocketType = InvalidSocketType;$/;"	m	class:CServerSocket	file:
m_uSocketType	CServerSocket.h	/^	static SocketType	m_uSocketType;$/;"	m	class:CServerSocket
m_upMessageHandlerthreadId	CMessagingServer.cpp	/^pthread_t  *CMessagingServer::m_upMessageHandlerthreadId = NULL;$/;"	m	class:CMessagingServer	file:
m_upMessageHandlerthreadId	CMessagingServer.h	/^	static pthread_t			*m_upMessageHandlerthreadId;$/;"	m	class:CMessagingServer
m_upMessageSenderthreadId	CMessagingServer.cpp	/^pthread_t *CMessagingServer::m_upMessageSenderthreadId = NULL;$/;"	m	class:CMessagingServer	file:
m_upMessageSenderthreadId	CMessagingServer.h	/^	static pthread_t			*m_upMessageSenderthreadId;$/;"	m	class:CMessagingServer
m_upServerSocketObject	CServerSocket.h	/^	CBasicSocket*	m_upServerSocketObject;		$/;"	m	class:CServerSocket
main	MessagingServerMain.cpp	/^int main(int argc, char* argv[])$/;"	f
reload	initmsgserverd	/^reload() {$/;"	f
restart	initmsgserverd	/^restart() {$/;"	f
rhstatus	initmsgserverd	/^rhstatus() {$/;"	f
start	initmsgserverd	/^start() {$/;"	f
stop	initmsgserverd	/^stop() {$/;"	f
what	CException.cpp	/^const char* CException::what() const throw() {$/;"	f	class:CException
~CBasicSocket	CBasicSocket.cpp	/^CBasicSocket::~CBasicSocket()$/;"	f	class:CBasicSocket
~CConfigData	CConfigData.cpp	/^CConfigData::~CConfigData()$/;"	f	class:CConfigData
~CException	CException.cpp	/^CException::~CException() throw() {$/;"	f	class:CException
~CFileHandler	CFileHandler.cpp	/^CFileHandler::~CFileHandler()$/;"	f	class:CFileHandler
~CMessagingServer	CMessagingServer.cpp	/^CMessagingServer::~CMessagingServer()$/;"	f	class:CMessagingServer
~CServerSocket	CServerSocket.cpp	/^CServerSocket::~CServerSocket()$/;"	f	class:CServerSocket
~CSynchronousSocketFactory	CSynchronousSocketFactory.cpp	/^CSynchronousSocketFactory::~CSynchronousSocketFactory()$/;"	f	class:CSynchronousSocketFactory
~CTCPSocket	CTCPSocket.cpp	/^CTCPSocket::~CTCPSocket()$/;"	f	class:CTCPSocket
